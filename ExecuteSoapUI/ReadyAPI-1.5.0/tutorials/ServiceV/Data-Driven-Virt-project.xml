<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e15c5504-61ed-4223-8f00-9825c764d33d" activeEnvironment="Default environment" name="Data Driven Virt Sample Project" resourceRoot="" soapui-version="6.0.0" xmlns:con="http://eviware.com/soapui/config">
    <con:description>Demonstrates how to use a data generator for creating a local virtual service.</con:description><con:settings/>
    <con:interface xsi:type="con:RestService" id="fef64602-7bed-45e3-b659-a0fb0fd4e3b2" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8095" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:settings/>
        <con:definitionCache type="TEXT" rootPart=""/>
        <con:endpoints>
            <con:endpoint>http://localhost:8095</con:endpoint>
        </con:endpoints>
        <con:resource name="" path="/getFlavor" id="ab715508-85e3-4cb6-a9d7-e719cae76c31">
            <con:settings/>
            <con:parameters/>
            <con:method name="Data" id="b5b0cde3-14fb-4315-af8a-0658991b0e82" method="GET">
                <con:settings/>
                <con:parameters/>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType>application/xml</con:mediaType>
                    <con:status>200</con:status>
                    <con:params/>
                    <con:element>xml</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType>application/xml</con:mediaType>
                    <con:status>404</con:status>
                    <con:params/>
                    <con:element>xml</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>500</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>500</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>500</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>500</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:request name="Flavor" id="a2ccad7d-22a7-4c61-82a9-76b783323032" mediaType="application/json">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://localhost:8095</con:endpoint>
                    <con:request/>
                    <con:originalUri>http://localhost/</con:originalUri>
                    <con:credentials>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:parameters/>
                </con:request>
            </con:method>
        </con:resource>
    </con:interface>
    <con:testSuite id="feafeb02-3ecc-405e-8a1c-59c0a24c408a" name="Ice Cream">
        <con:settings/>
        <con:runType>SEQUENTIAL</con:runType>
        <con:testCase id="1651566e-a3c9-4216-837a-157cd1efec12" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Flavors" searchProperties="true">
            <con:settings/>
            <con:testStep type="VirtRunnerTestStep" name="Start Virt Service" id="0858e711-41bf-48da-8837-f23cb23f9af5"><con:settings/><con:config><url>localhost</url><server>REST Virt - Flavors</server><action>run</action></con:config></con:testStep>
            <con:testStep type="restrequest" name="getFlavor" id="31d351d8-c607-450c-ae47-cb46becd73f2">
                <con:settings/>
                <con:config service="http://localhost:8095" resourcePath="/getFlavor" methodName="Data" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:restRequest name="getFlavor" id="a2ccad7d-22a7-4c61-82a9-76b783323032" mediaType="application/json">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:endpoint>http://localhost:8095</con:endpoint>
                        <con:request/>
                        <con:originalUri>http://localhost/</con:originalUri>
                        <con:credentials>
                            <con:authType>No Authorization</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:parameters/>
                    </con:restRequest>
                </con:config>
            </con:testStep><con:testStep type="VirtRunnerTestStep" name="Stop Virt Service" id="c780ca71-d0ee-4694-99cb-3b20b79867ef"><con:settings/><con:config><url>localhost</url><server>REST Virt - Flavors</server><action>stop</action></con:config></con:testStep><con:properties/>
            <con:reportParameters/>
            <con:securityTest id="5a1010c3-546f-4017-8a95-295f93a44bee" name="DataDriven Security" failOnError="false" testCaseId="1651566e-a3c9-4216-837a-157cd1efec12">
                <con:settings/>
                <con:properties/>
                <con:reportParameters/>
            </con:securityTest>
        <con:breakPoints><con:testStepId>0858e711-41bf-48da-8837-f23cb23f9af5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
        <con:properties/>
        <con:reportParameters/>
    </con:testSuite>
    <con:restMockService id="e79b97b6-e3ce-410f-bc85-2a29602fa889" port="8095" path="/" host="localhost" name="REST Virt - Flavors">
        <con:settings/>
        <con:properties/>
        <con:constraints>
            <con:congestion>0</con:congestion>
            <con:inputBandwidth>125</con:inputBandwidth>
            <con:outputBandwidth>125</con:outputBandwidth>
            <con:maxThreadPoolCapacity>20</con:maxThreadPoolCapacity>
            <con:coreThreadPoolCapacity>5</con:coreThreadPoolCapacity>
            <con:virtError>
                <con:start>-1</con:start>
            </con:virtError>
        </con:constraints>
        <con:dataSources>
            <con:dataSource>
                <con:dataSource type="Grid">
                    <con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Vanilla&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Chocolate&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Mint Chocolate Chip&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Cookies and Cream&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Cookie Dough&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Guatemalan Ripple&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Butter Pecan&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Peanut Butter Swirl&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Strawberry&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Raspberry Truffle&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Gadzooks!&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Coffee&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Moose Tracks&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">English Toffee Crunch&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Dark Chocolate Chip&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Double Chocolate&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Pistachio&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Banana&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">WHYY Experience&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Cherry Vanilla&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Butterscotch Vanilla&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Chocolate Chip&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">French Vanilla&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Rum Raisin&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Peach&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Egg Nog&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Gadzooks Blanc&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Pralines and Cream&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Matcha&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Mocha Chip&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Cinnamon&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Vanilla Fudge&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Mango&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Butter Almond&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Irish Coffee&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Macadamia Nut&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Pumpkin&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Raspberry Sorbet&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Mango-Apricot Sorbet&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Lemon Sorbet&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Orange Sorbet&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Vanilla No Sugar Added&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">Pomegranate Blueberry Chunk&lt;/con:entry></row></con:configuration>
                </con:dataSource>
                <con:name>Flavors</con:name>
                <con:property>flavor</con:property>
            </con:dataSource>
        </con:dataSources>
        <con:headerValidator/><con:restMockAction name="/getFlavor" method="GET" resourcePath="/getFlavor" id="5cc31861-c6d5-4c54-900e-f2cdc78c910a">
            <con:settings/>
            <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchConfig/><con:dispatchPath>/*
                // Script dispatcher is used to select a response based on the incoming request.
                // Here are few examples showing how to match based on path, query param, header and body

                // Match based on path
                def requestPath = mockRequest.getPath()
                log.info "Path: "+ requestPath

                if( requestPath.contains("json") )
                {
                // return the name of the response you want to dispatch
                return "JSON Response"
                }


                // Match based on query parameter
                def queryString = mockRequest.getRequest().getQueryString()
                log.info "QueryString: " + queryString

                if( queryString.contains("stockholm") )
                {
                // return the name of the response you want to dispatch
                return "Response Stockholm"
                }
                else if( queryString.contains("london") )
                {
                // return the name of the response you want to dispatch
                return "Response London"
                }


                // Match based on header
                def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
                log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

                if( acceptEncodingHeaderList.contains("gzip,deflate") )
                {
                // return the name of the response you want to dispatch
                return "GZiped Response"
                }


                // Match based on body
                def requestBody = mockRequest.getRequestContent()
                log.info "Request body: " + requestBody

                if( requestBody.contains("some data") )
                {
                // return the name of the response you want to dispatch
                return "Response N"
                }
                */
            </con:dispatchPath>
            <con:response name="Flavor" id="af0e6fcf-af95-4eef-b9b6-a4d0c9c83221" httpResponseStatus="200" mediaType="application/xml" dataSource="Flavors">
                <con:settings/>
                <con:responseContent>&lt;xml>
                    &lt;flavor>${#MockResponse#flavor}&lt;/flavor>
                    &lt;/xml>
                </con:responseContent>
            </con:response>
        </con:restMockAction>
    </con:restMockService>
    <con:requirements/>
    <con:properties/>
    <con:wssContainer/>
    <con:databaseConnectionContainer/>
    <con:oAuth2ProfileContainer/>
    <con:reporting>
        <con:xmlTemplates/>
        <con:parameters/>
    </con:reporting>
<con:authRepository/></con:soapui-project>